[{"C:\\Users\\ASUS\\Desktop\\Newton school\\survey-tiger\\src\\index.js":"1","C:\\Users\\ASUS\\Desktop\\Newton school\\survey-tiger\\src\\App.js":"2","C:\\Users\\ASUS\\Desktop\\Newton school\\survey-tiger\\src\\reportWebVitals.js":"3","C:\\Users\\ASUS\\Desktop\\Newton school\\survey-tiger\\src\\components\\take-survey.js":"4","C:\\Users\\ASUS\\Desktop\\Newton school\\survey-tiger\\src\\components\\create-survey.js":"5","C:\\Users\\ASUS\\Desktop\\Newton school\\survey-tiger\\src\\components\\multi-select.js":"6","C:\\Users\\ASUS\\Desktop\\Newton school\\survey-tiger\\src\\components\\single-select.js":"7","C:\\Users\\ASUS\\Desktop\\Newton school\\survey-tiger\\src\\store\\global-store.js":"8","C:\\Users\\ASUS\\Desktop\\Newton school\\survey-tiger\\src\\store\\responseSclice.js":"9","C:\\Users\\ASUS\\Desktop\\Newton school\\survey-tiger\\src\\components\\confirm-survey.js":"10","C:\\Users\\ASUS\\Desktop\\Newton school\\survey-tiger\\src\\store\\surveySclice.js":"11"},{"size":772,"mtime":1611080508818,"results":"12","hashOfConfig":"13"},{"size":1687,"mtime":1611139616174,"results":"14","hashOfConfig":"13"},{"size":362,"mtime":499162500000,"results":"15","hashOfConfig":"13"},{"size":500,"mtime":1611135975946,"results":"16","hashOfConfig":"13"},{"size":1587,"mtime":1611139351169,"results":"17","hashOfConfig":"13"},{"size":3242,"mtime":1611139849402,"results":"18","hashOfConfig":"13"},{"size":2816,"mtime":1611139864497,"results":"19","hashOfConfig":"13"},{"size":360,"mtime":1611139371488,"results":"20","hashOfConfig":"13"},{"size":271,"mtime":1610981112756,"results":"21","hashOfConfig":"13"},{"size":1531,"mtime":1611139873077,"results":"22","hashOfConfig":"13"},{"size":1069,"mtime":1611139520436,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"81il2l",{"filePath":"27","messages":"28","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29","usedDeprecatedRules":"26"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34","usedDeprecatedRules":"26"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"26"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"C:\\Users\\ASUS\\Desktop\\Newton school\\survey-tiger\\src\\index.js",[],["50","51"],"C:\\Users\\ASUS\\Desktop\\Newton school\\survey-tiger\\src\\App.js",["52"],"import logo from './logo.png';\nimport './App.css';\nimport {Button} from 'reactstrap';\nimport CreateSurvey from './components/create-survey';\nimport TakeSurvey from './components/take-survey';\nimport {useDispatch} from 'react-redux';\nimport {surveySclice,createSurvey} from './store/surveySclice'\nimport {unwrapResult} from \"@reduxjs/toolkit\";\nimport {\n  Switch,\n  Route,\n  Link,\n  useHistory\n} from \"react-router-dom\";\nimport ConfirmSurvey from './components/confirm-survey';\n\nfunction App() {\n  const dispatch=useDispatch();\n  const history=useHistory();\n  const redirectToNewSurvey=()=>{\n      //  dispatch(surveySclice.actions.createSurvey(newSurveyId));\n      //  history.pushState('/create/'+newSurveyId);\n      dispatch(createSurvey())\n      .then(unwrapResult)\n      .then((newSurveyId)=>history.push(\"/create/\"+newSurveyId));\n  }\n  return (  \n    \n         <div className=\"App\">\n         <header className=\"App-header\">\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\n         </header>\n\n          <Switch>\n          <Route path=\"/create/:surveyId\">\n          \n            <CreateSurvey/>\n          </Route>\n          <Route path=\"/confirm/:surveyId\">\n            <ConfirmSurvey/>\n          </Route>\n          <Route path=\"/take\">\n            <TakeSurvey/>\n            </Route>\n          <Route path=\"/\">\n        <Button className=\"survey-main-btn\" style={{backgroundColor:\"#af5f46\"}} onClick={redirectToNewSurvey}>Create Survey</Button>{' '}\n        <Link to=\"/take\"><Button className=\"survey-main-btn\" style={{backgroundColor:\"#af5f46\"}}>Take Survey</Button>{' '}</Link>\n     \n          </Route>\n        </Switch>\n      </div>\n  \n   \n   \n  );\n}\n\nexport default App;\n","C:\\Users\\ASUS\\Desktop\\Newton school\\survey-tiger\\src\\reportWebVitals.js",[],"C:\\Users\\ASUS\\Desktop\\Newton school\\survey-tiger\\src\\components\\take-survey.js",["53"],"import {Button} from 'reactstrap';\r\nimport React, { useState } from 'react';\r\nimport {useSelector} from 'react-redux';\r\n\r\nfunction TakeSurvey(){\r\n  const surveyIDs=useSelector((globalStore)=>globalStore.surveys.filter(s=>s.isPublished).map((s)=>s.surveyId));\r\n  return (\r\n      <>\r\n      {surveyIDs.map((surveyId)=>(\r\n        <Button className='survey-main-btn' key={surveyId}>\r\n          Take Survey{surveyId}\r\n        </Button>\r\n      ))}\r\n    </>\r\n  );  \r\n}\r\n      \r\n\r\n\r\nexport default TakeSurvey;","C:\\Users\\ASUS\\Desktop\\Newton school\\survey-tiger\\src\\components\\create-survey.js",["54"],"import {Button} from 'reactstrap';\r\nimport React, { useState,useEffect} from 'react';\r\nimport { Dropdown, DropdownToggle, DropdownMenu, DropdownItem } from 'reactstrap';\r\nimport MultiSelect from './multi-select';\r\nimport Singleselect from './single-select';\r\nimport {useParams,useLocation,useHistory} from \"react-router-dom\";\r\nfunction CreateSurvey() {\r\n  const {surveyId}=useParams();\r\n  const query=useLocation().search;\r\n  const history=useHistory();\r\n    const [dropdownOpen, setDropdownOpen] = useState(false);\r\n    const [dropdownText,setDropdownText]=useState(\"Select Question Type\")\r\n    useEffect(()=>{\r\n      if(query==='?clear=true'){\r\n        setDropdownText(\"select question Type\")\r\n        history.push('/create'+surveyId);\r\n      }\r\n    },[query,history,surveyId]);\r\n  const toggle = () => setDropdownOpen(prevState => !prevState);\r\n\r\n  return (\r\n      <>\r\n      <p>\r\n        Survey Id :{surveyId}\r\n      </p>\r\n    <Dropdown isOpen={dropdownOpen} toggle={toggle} >\r\n      <DropdownToggle caret style={{background:\" #af5f46\"}}>\r\n       {dropdownText}\r\n        </DropdownToggle>\r\n      <DropdownMenu>\r\n        <DropdownItem onClick={()=>setDropdownText(\"Multi select Question\")} >Multi Select Question</DropdownItem>\r\n        <DropdownItem onClick={()=>setDropdownText(\"single select Question\")} >Single Select Question</DropdownItem>\r\n      </DropdownMenu>\r\n    </Dropdown>\r\n      {dropdownText===\"Multi select Question\"?<MultiSelect/>:null}\r\n      {dropdownText===\"single select Question\"?<Singleselect/>:null}\r\n    </>\r\n  );  \r\n      \r\n\r\n}\r\n\r\nexport default CreateSurvey;","C:\\Users\\ASUS\\Desktop\\Newton school\\survey-tiger\\src\\components\\multi-select.js",[],"C:\\Users\\ASUS\\Desktop\\Newton school\\survey-tiger\\src\\components\\single-select.js",[],"C:\\Users\\ASUS\\Desktop\\Newton school\\survey-tiger\\src\\store\\global-store.js",[],"C:\\Users\\ASUS\\Desktop\\Newton school\\survey-tiger\\src\\store\\responseSclice.js",[],"C:\\Users\\ASUS\\Desktop\\Newton school\\survey-tiger\\src\\components\\confirm-survey.js",["55"],"C:\\Users\\ASUS\\Desktop\\Newton school\\survey-tiger\\src\\store\\surveySclice.js",[],{"ruleId":"56","replacedBy":"57"},{"ruleId":"58","replacedBy":"59"},{"ruleId":"60","severity":1,"message":"61","line":7,"column":9,"nodeType":"62","messageId":"63","endLine":7,"endColumn":21},{"ruleId":"60","severity":1,"message":"64","line":2,"column":17,"nodeType":"62","messageId":"63","endLine":2,"endColumn":25},{"ruleId":"60","severity":1,"message":"65","line":1,"column":9,"nodeType":"62","messageId":"63","endLine":1,"endColumn":15},{"ruleId":"60","severity":1,"message":"64","line":2,"column":17,"nodeType":"62","messageId":"63","endLine":2,"endColumn":25},"no-native-reassign",["66"],"no-negated-in-lhs",["67"],"no-unused-vars","'surveySclice' is defined but never used.","Identifier","unusedVar","'useState' is defined but never used.","'Button' is defined but never used.","no-global-assign","no-unsafe-negation"]